# Generated by Django 5.1.6 on 2025-03-04 11:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("student", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("1", "TPO"),
                            ("2", "Staff/Faculty"),
                            ("3", "Student"),
                        ],
                        default="3",
                        max_length=10,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True, related_name="customuser_groups", to="auth.group"
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="customuser_permissions",
                        to="auth.permission",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("address", models.TextField(blank=True, null=True)),
                ("eligibility_criteria", models.TextField()),
                ("academic_year", models.CharField(max_length=9)),
                ("job_role", models.CharField(max_length=200)),
                ("package", models.DecimalField(decimal_places=2, max_digits=10)),
                ("students_placed", models.IntegerField(default=0)),
                ("date_added", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="PasswordReset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("otp", models.CharField(max_length=6)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="TPO",
            fields=[
                (
                    "custom_user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("full_name", models.CharField(max_length=150)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                ("last_login", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Eligibility",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_eligible", models.BooleanField(default=True)),
                ("eligibility_checked_date", models.DateTimeField(auto_now_add=True)),
                (
                    "original_status",
                    models.CharField(
                        choices=[
                            ("ELIGIBLE_APPLIED", "Eligible and Applied"),
                            ("ELIGIBLE_NOT_APPLIED", "Eligible but Not Applied"),
                            ("NOT_ELIGIBLE", "Not Eligible"),
                            ("PROCESSING", "Processing"),
                            ("REJECTED", "Rejected"),
                            ("PLACED", "Placed"),
                        ],
                        default="ELIGIBLE_NOT_APPLIED",
                        max_length=20,
                    ),
                ),
                (
                    "application_status",
                    models.CharField(
                        choices=[
                            ("ELIGIBLE_APPLIED", "Eligible and Applied"),
                            ("ELIGIBLE_NOT_APPLIED", "Eligible but Not Applied"),
                            ("NOT_ELIGIBLE", "Not Eligible"),
                            ("PROCESSING", "Processing"),
                            ("REJECTED", "Rejected"),
                            ("PLACED", "Placed"),
                        ],
                        default="NOT_ELIGIBLE",
                        max_length=20,
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tpo.company"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="student.studentregistration",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("seen", models.BooleanField(default=False)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tpo.company"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="student.studentregistration",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlacementOffer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("offer_letter", models.FileField(upload_to="offer_letters/")),
                ("date_received", models.DateField(auto_now_add=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="placed_students",
                        to="tpo.company",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="offer_set",
                        to="student.studentprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StudentData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("roll_number", models.CharField(max_length=20)),
                ("full_name", models.CharField(max_length=100)),
                ("personal_email", models.EmailField(max_length=254)),
                ("branch", models.CharField(max_length=100)),
                ("round_1", models.CharField(blank=True, max_length=100, null=True)),
                ("round_2", models.CharField(blank=True, max_length=100, null=True)),
                ("round_3", models.CharField(blank=True, max_length=100, null=True)),
                ("round_4", models.CharField(blank=True, max_length=100, null=True)),
                ("round_5", models.CharField(blank=True, max_length=100, null=True)),
                ("round_6", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tpo.company"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="student.studentregistration",
                    ),
                ),
            ],
            options={
                "unique_together": {("roll_number", "company")},
            },
        ),
    ]
